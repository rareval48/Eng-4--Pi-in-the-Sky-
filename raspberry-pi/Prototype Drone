#type: ignore
import adafruit_mpu6050 as imu
import board
import time
import busio
import pwmio

sda_pin = board.GP4
scl_pin = board.GP5
i2c = busio.I2C(scl_pin, sda_pin)
mpu = imu.MPU6050(i2c, address = 0x68)

FRED = 100

motor1_r = pwmio.PWMOut(board.GP17, frequency=FRED)
motor2_f = pwmio.PWMOut(board.GP18, frequency=FRED)
motor3_r = pwmio.PWMOut(board.GP19, frequency=FRED)
motor4_f = pwmio.PWMOut(board.GP20, frequency=FRED)
while True:

    print(f"X: {mpu.acceleration[0]} m/s2") #print XYZ vals
    print(f"Y: {mpu.acceleration[1]} m/s2")
    print(f"Z: {mpu.acceleration[2]} m/s2")
    print("")
    time.sleep(.1)

    if mpu.acceleration[0] >= 1: 
        print("Tilting Back")
        motor1_r.duty_cycle = 65535 // 2
        motor2_f.duty_cycle = 65535
        motor3_r.duty_cycle = 65535 // 2
        motor4_f.duty_cycle = 65535

    else:
        print("Level")
        motor1_r.duty_cycle = 65535
        motor2_f.duty_cycle = 65535
        motor3_r.duty_cycle = 65535
        motor4_f.duty_cycle = 65535
    
    if mpu.acceleration[0] <= -1: 
        print("Tilting Forward")
        motor1_r.duty_cycle = 65535 
        motor2_f.duty_cycle = 65535 // 2 
        motor3_r.duty_cycle = 65535
        motor4_f.duty_cycle = 65535 // 2

    else:
        print("Level")
        motor1_r.duty_cycle = 65535
        motor2_f.duty_cycle = 65535
        motor3_r.duty_cycle = 65535
        motor4_f.duty_cycle = 65535

    if mpu.acceleration[1] <= -1: 
        print("Tilting left")
        motor1_r.duty_cycle = 65535 // 2
        motor2_f.duty_cycle = 65535 // 2
        motor3_r.duty_cycle = 65535
        motor4_f.duty_cycle = 65535

    else:
        print("Level")
        motor1_r.duty_cycle = 65535
        motor2_f.duty_cycle = 65535
        motor3_r.duty_cycle = 65535
        motor4_f.duty_cycle = 65535

    if mpu.acceleration[1] >= 1: 
        print("Tilting right")
        motor1_r.duty_cycle = 65535
        motor2_f.duty_cycle = 65535
        motor3_r.duty_cycle = 65535 // 2
        motor4_f.duty_cycle = 65535 // 2

    else:
        print("Level")
        motor1_r.duty_cycle = 65535
        motor2_f.duty_cycle = 65535
        motor3_r.duty_cycle = 65535
        motor4_f.duty_cycle = 65535
#type: ignore
import time
import board
import digitalio
import microcontroller
import pwmio

led = digitalio.DigitalInOut(board.LED)
led.switch_to_output()
sda_pin = board.GP2
scl_pin = board.GP3

FRED = 1000

temp = microcontroller.cpu.temperature

motor1_r = pwmio.PWMOut(board.GP17, frequency=FRED)
motor2_f = pwmio.PWMOut(board.GP18, frequency=FRED)
motor3_r = pwmio.PWMOut(board.GP19, frequency=FRED)
motor4_f = pwmio.PWMOut(board.GP20, frequency=FRED)


for i in range(110):
    print(i)
    time.sleep(.1)

    if i <= 49:
        print("1st Phase")
        motor1_r.duty_cycle = 65535
        motor2_f.duty_cycle = 65535
        motor3_r.duty_cycle = 65535
        motor4_f.duty_cycle = 65535
        try:
            with open("/data.txt", "a") as datalog:
                while True:    
                    datalog.write('{0:f}\n'.format(temp))
                    datalog.write(str({mpu.acceleration[0]}))
                    datalog.write(str({mpu.acceleration[1]}))
                    datalog.write(str({mpu.acceleration[2]}))
                    datalog.flush()
                    led.value = not led.value

    if i == 50:
        print("2nd Phase")
        motor1_r.duty_cycle = 0
        motor2_f.duty_cycle = 0
        motor3_r.duty_cycle = 0
        motor4_f.duty_cycle = 0

    if i >= 51:
        print("3nd Phase")
        motor1_r.duty_cycle = 65535/2
        motor2_f.duty_cycle = 65535/2
        motor3_r.duty_cycle = 65535/2
        motor4_f.duty_cycle = 65535/2
        try:
            with open("/data.txt", "a") as datalog: 
                while True:
                    datalog.write('{0:f}\n'.format(temp))
                    datalog.write(str({mpu.acceleration[0]}))
                    datalog.write(str({mpu.acceleration[1]}))
                    datalog.write(str({mpu.acceleration[2]}))
                    datalog.flush()
                    led.value = not led.value

    if i == 100:
        print("4rd Phase")
        motor1_r.duty_cycle = 0
        motor2_f.duty_cycle = 0
        motor3_r.duty_cycle = 0
        motor4_f.duty_cycle = 0

try:
    with open("/data.txt", "a") as datalog:
        while True:
            datalog.write('{0:f}\n'.format(temp))
            datalog.write(str({mpu.acceleration[0]}))
            datalog.write(str({mpu.acceleration[1]}))
            datalog.write(str({mpu.acceleration[2]}))
            datalog.flush()
            led.value = not led.value
            time.sleep(1)

except OSError as e:  # Typically when the filesystem isn't writeable...
    delay = 0.5  # ...blink the LED every half second.
    if e.args[0] == 28:  # If the filesystem is full...
        delay = 0.25  # ...blink the LED faster!
    while True:
        led.value = not led.value
        time.sleep(delay)
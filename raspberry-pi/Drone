# type: ignore
import adafruit_mpu6050 as imu
import busio
import board
import time
import pulseio
from pwmio import PWMOut
from digitalio import DigitalInOut, Direction, Pull
from adafruit_motor import motor as Motor

sdaPin = board.GP2  # defining the SDA & SCL pins to use
sclPin = board.GP3
i2c = busio.I2C(sdaPin, sclPin)
mpu = imu.MPU6050(i2c) 

reverse_ain1 = PWMOut(board.GP8, frequency=50)
reverse_ain2 = PWMOut(board.GP9, frequency=50)
reverse_bin1 = PWMOut(board.GP11, frequency=50)
reverse_bin2 = PWMOut(board.GP10, frequency=50)

forward_ain1 = PWMOut(board.GP12, frequency=50)
forward_ain2 = PWMOut(board.GP13, frequency=50)
forward_bin1 = PWMOut(board.GP14, frequency=50)
forward_bin2 = PWMOut(board.GP15, frequency=50)


motor_a = Motor.DCMotor(forward_ain1, forward_ain2)
motor_b = Motor.DCMotor(forward_bin1, forward_bin2)
motor_c = Motor.DCMotor(reverse_ain1, reverse_ain2)
motor_d = Motor.DCMotor(reverse_bin1, reverse_bin2)

def basic_operations():  # Drive forward at full throttle
    motor_a.throttle = 1.0
    motor_b.throttle = 1.0
    motor_c.throttle = 1.0
    motor_d.throttle = 1.0

while True:
    basic_operations() 

    accelerationVals = mpu.acceleration
    
    print(f"X acceleration: {accelerationVals[0]} m/s2")
    print(f"Y acceleration: {accelerationVals[1]} m/s2")
    print(f"Z acceleration: {accelerationVals[2]} m/s2")
    print("")
    time.sleep(.1)